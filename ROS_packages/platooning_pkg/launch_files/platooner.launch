<?xml version="1.0"?>

<launch>
  <!-- set car number parameter to avoid having nodes with same name with multiple jetracers -->
  <arg name="car_number_str_local" value="$(env car_number_str)"/>

  <!-- start up racecar -->
  <node name="racear$(arg car_number_str_local)" pkg="racecar_pkg" type="racecar_universal.py" output="screen"/>
  
  <!-- start up steering angle to command node -->
  <node name="racear_steering_angle_to_command$(arg car_number_str_local)" pkg="racecar_pkg" type="steering_angle_2_command.py" output="screen"/>

  <!-- localization -->
  <include file="$(find localization_and_mapping_pkg)/launch files/amcl_universal.launch"/>
  
  <!-- steering controller-->
  <node name="steering_controller$(arg car_number_str_local)" pkg="lane_following_controller_pkg" type="lateral_controller.py" output="screen"/>

  <!-- lidar clustering to measure distance to leader -->
  <node name="lidar_clustering$(arg car_number_str_local)" pkg="platooning_pkg" type="lidar_clustering_cpp" output="screen"/>

  <!-- relative state publisher -->
  <node name="relative_state_publisher$(arg car_number_str_local)" pkg="platooning_pkg" type="relative_state_publisher.py" output="screen"/>
  
  <!-- follower longitudinal controller -->
  <node name="longitudinal_controller$(arg car_number_str_local)" pkg="platooning_pkg" type="longitudinal_controller.py" output="screen"/>

  <!-- communication node-->
  <node name="communication_node_$(arg car_number_str_local)" pkg="platooning_pkg" type="communication_node.py" output="screen"/> 

  <!-- acc 2 throttle node-->
  <node name="acc_2_throttle_$(arg car_number_str_local)" pkg="platooning_pkg" type="acc_2_throttle.py" output="screen"/>
   

</launch>
